#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 1466 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; ignora\310\233i urm\304\203toarele linii de cod."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 17 3 83
(
 #"; c\303\242te exerci\310\233ii la care s-au \303\256ntors rezultate "
 #"default s\304\203 fie ar\304\203tate detaliat"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"testul"
0 0 24 3 1 #" "
0 0 14 3 7 #"testele"
0 0 24 3 1 #" "
0 0 14 3 6 #"trecut"
0 0 24 3 3 #")) "
0 0 17 3 108
(
 #"; variante: '(exerci\310\233iul exerci\310\233iile rezolvat) sau '(t"
 #"estul testele trecut) sau '(task taskurile rezolvat)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #" () "
0 0 14 3 14 #"your-code-here"
0 0 24 3 3 #")) "
0 0 17 3 52
(
 #"; ce rezultate default sunt \303\256ntoarse \303\256n exerci\310\233"
 #"ii"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"separator"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"punct"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"all"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"sep"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"all"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 3 #"all"
0 0 24 3 5 #"))) ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 14 3 2 #"ex"
0 0 24 3 3 #") ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"check-exp"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 10 #"check-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"difer\304\203 de cel a\310\231teptat\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"check-in"
0 0 24 3 2 #"  "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-in-part"
0 0 24 3 2 #"  "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-in-part"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 10 #"check-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 19 3 43 #"\"nu se afl\304\203 printre variantele a\310\231teptate\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list>setR"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 7 #"ch-len?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 12 #"list->seteqv"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 9 #"list>setR"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"check-set"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 14 #"check-set-part"
0 0 24 3 2 #"  "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"check-set-part"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 10 #"check-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"list->seteqv"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"expected"
0 0 24 3 5 #")))) "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"nu este echivalent cu cel a\310\231teptat\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"check-set-unique"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 21 #"check-set-unique-part"
0 0 24 3 2 #"  "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"check-set-unique-part"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #") ("
0 0 14 3 10 #"check-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 3 #"per"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"expected"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"list->seteqv"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"expected"
0 0 24 3 6 #"))))) "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"nu este echivalent cu cel a\310\231teptat\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 14 3 6 #"tester"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #" "
0 0 14 3 5 #"err-m"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"tester"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 14 3 4 #"n-ex"
0 0 24 3 2 #") "
0 0 15 3 8 #"defaults"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 15 3 15 #"default-results"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 2 #") "
0 0 14 3 13 #"show-defaults"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 35 #"\"[~a][--]~a rezultatul ~v ~a: ~v~n\""
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 11 #"\" la ~a ~v\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 5 #"err-m"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"pts"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"p-ex"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"~a ~a ~a~a~a: +~v ~a~n\""
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"+~v:\""
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"[~v][OK]\""
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepend"
0 0 24 3 1 #" "
0 0 14 3 4 #"n-ex"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~v \""
0 0 24 3 1 #" "
0 0 14 3 4 #"part"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 14 3 3 #"pts"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"punct"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"puncte"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 3 #"pts"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sumar"
0 0 24 3 3 #") ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"show-defaults"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"..."
0 0 24 3 1 #" "
0 0 14 3 10 #"rezultatul"
0 0 24 3 1 #" "
0 0 14 3 8 #"implicit"
0 0 24 3 1 #" "
0 0 14 3 3 #"dat"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 7 #"name-ex"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 15 3 8 #"defaults"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"total: ~v puncte~n\""
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; Avem de implementat o mini-bibliotec\304\203 pentru numere palind"
 #"romice."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57
(
 #";; Pentru aceasta, vom defini, pe r\303\242nd, func\310\233ii pentru"
 #":"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; - reprezentarea (ca list\304\203 de \"cifre\") a unui num\304\203"
 #"r natural \303\256ntr-o baz\304\203 b"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; - testul c\304\203 o list\304\203 este palindrom (adic\304\203 es"
 #"te totuna cu lista inversat\304\203)"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; - testul c\304\203 un num\304\203r este palindrom \303\256n toate"
 #" bazele dintr-o list\304\203 dat\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; - parcurgerea tuturor n"
 #"umerelor p\303\242n\304\203 la un num"
 #"\304\203r dat n, \310\231i selectarea celor"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;   care sunt palindroame \303\256"
 #"n toate bazele dintr-o list\304\203 dat\304\203 de baze"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; - determinarea gradului unui palindrom"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; - determinarea cifrei care"
 #" poate fi eliminat\304\203 ast"
 #"fel \303\256nc\303\242t un num\304\203r s\304\203"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";;   devin\304\203 palindrom"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; Fie urm\304\203toarele axiome "
 #"pentru ob\310\233inerea reprezent\304\203rii unui num\304\203r natur"
 #"al"
) 0 0 24 29 1 #"\n"
0 0 17 3 57
(
 #";; \303\256n baza b (cu [] = lista vid\304\203 \310\231i ++ = concat"
 #"enare)."
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";; num->base(0,b) = [ ]                                   ; pt n=0"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; num->base(n,b) = num->base(n div b, b) ++ [ n mod b ]  ; pt n>0"
0 0 24 29 1 #"\n"
0 0 17 3 54
(
 #";; Implementa\310\233i func\310\233ia"
 #" corespunz\304\203toare \303\256n Racket:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num->base"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"null"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num->base"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num->base"
0 0 24 3 1 #" "
0 0 21 3 3 #"489"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num->base"
0 0 24 3 1 #" "
0 0 21 3 3 #"489"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 56
#";; Fie urm\304\203toarele axiome pentru inversarea unei liste."
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; rev([ ]) = [ ]"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; rev(x:l) = rev(l) ++ [x]"
0 0 24 29 1 #"\n"
0 0 17 3 54
(
 #";; Implementa\310\233i func\310\233ia"
 #" corespunz\304\203toare \303\256n Racket:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"check-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"punct"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 54
(
 #";; Implementa\310\233i testul c\304\203 o list\304\203 L este palind"
 #"rom:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"palindrome?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 11 #"palindrome?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 11 #"palindrome?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 11 #"palindrome?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 3 #".25"
0 0 24 3 2 #" ("
0 0 14 3 11 #"palindrome?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";; Testa\310\233i c\304\203 n este palindrom \303\256n toate bazele "
 #"din lista Bases:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"all-palindromes?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"Bases"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 16 #"all-palindromes?"
0 0 24 3 1 #" "
0 0 21 3 3 #"585"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 16 #"all-palindromes?"
0 0 24 3 1 #" "
0 0 21 3 3 #"594"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.5"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; G\304\203si\310\233i toate numerele naturale, mai mici sau egale "
 #"cu n, care sunt"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";; palindroame \303\256n toate bazele din lista Bases:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"palindromes-to-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"Bases"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"check-exp"
0 0 24 3 2 #" ("
0 0 14 3 16 #"palindromes-to-n"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; S\304\203 se g\304\203seasc\304\203 prim"
 #"ul num\304\203r mai mare dec\303\242t start care este palindrom \303"
 #"\256n"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; minim b baze dintre bazele 2, 3, 4, 5, 6, 7, 8, 9, 10."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"first-b-pal"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"first-b-pal"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"121"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"first-b-pal"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"373"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"exerci\310\233iul"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"puncte"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #"; S\304\203 se g\304\203seasc\304\203 cea m"
 #"ai lung\304\203 por\310\233iune continu\304\203 care este palindrom,"
 #" dintr-un num\304\203r, \303\256n baza 10."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list->num"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"dig"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"dig"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Hint: func\310\233ia (take L n) \303\256ntoarce prefixul de lungim"
 #"e n al listei L."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 14 3 14 #"your-code-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 3 #"121"
0 0 24 3 2 #") "
0 0 21 3 3 #"121"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"check-in-part"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 4 #"1214"
0 0 24 3 2 #") "
0 0 21 3 3 #"121"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 4 #"5121"
0 0 24 3 2 #") "
0 0 21 3 3 #"121"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 10 #"5122145215"
0 0 24 3 2 #") "
0 0 21 3 4 #"1221"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-exp-part"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/6"
0 0 24 3 2 #" ("
0 0 14 3 18 #"longest-palindrome"
0 0 24 3 1 #" "
0 0 21 3 13 #"5122145213125"
0 0 24 3 2 #") "
0 0 21 3 7 #"5213125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"sumar"
0 0 24 3 1 #")"
0           0
